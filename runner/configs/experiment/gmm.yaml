# @package _global_

# to execute this experiment run:
# python train.py experiment=example

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters
defaults:
  - override /energy: gmm

tags: ["GMM"]

seed: 12345

logger:
  wandb:
    tags: ${tags}
    group: "gmm"

model:
  noise_schedule:
    _target_: src.models.components.noise_schedules.GeometricNoiseSchedule
    sigma_min: 0.000004
    sigma_max: 0.4

  buffer:
    prioritize: false

  partial_prior:
    _target_: src.energies.base_prior.Prior
    _partial_: true
    dim: 2

  clipper:
    _target_: src.models.components.clipper.Clipper
    should_clip_scores: True
    should_clip_log_rewards: False
    max_score_norm: 50
    min_log_reward: null

  lambda_weighter:
    _target_: src.models.components.lambda_weighter.BasicLambdaWeighter
    _partial_: true
    epsilon: 1e-3
    # _target_: src.models.components.lambda_weighter.NoLambdaWeighter
    # _partial_: true

  optimizer:
    lr: 1e-3

  diffusion_scale: 1.0

  num_samples_to_generate_per_epoch: 1000

  # this has to be max 1000 since test_set is 1000
  eval_batch_size: 1000
  scheduler: null

trainer:
  check_val_every_n_epoch: 5
